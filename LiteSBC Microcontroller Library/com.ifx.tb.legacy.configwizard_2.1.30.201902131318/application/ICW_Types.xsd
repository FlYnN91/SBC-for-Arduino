<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML 2015 Designer Edition 13.2.3.6018 (http://www.liquid-technologies.com)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:simpleType name="Character">
		<xs:restriction base="xs:string">
			<xs:length value="1" fixed="true"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LimitedString">
		<xs:restriction base="xs:string">
			<xs:maxLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="hexOrDecType">
		<xs:restriction base="xs:string">
			<xs:pattern value="0x[0-9A-Fa-f]+|[0-9]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="rgbColorType">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d+;\d+;\d+(;\d+)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="sizeTupelType">
		<xs:restriction base="xs:string">
			<xs:pattern value="-?\d+;\s*-?\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="sizePolicyType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="fixed"/>
			<xs:enumeration value="expanding"/>
			<xs:enumeration value="minimum"/>
			<xs:enumeration value="maximum"/>
			<xs:enumeration value="preferred"/>
			<xs:enumeration value="minimumexpanding"/>
			<xs:enumeration value="ignored"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="sizePolicyTupelType">
		<xs:restriction base="xs:string">
			<!--<xs:pattern value="sizePolicyType;sizePolicyType" />-->

			<xs:pattern value="(fixed|expanding|minimum|maximum|preferred|minimumexpanding|ignored);(fixed|expanding|minimum|maximum|preferred|minimumexpanding|ignored)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="standardAttributesContainer">
		<xs:attribute name="label" type="xs:string"/>
		<xs:attribute name="color" type="rgbColorType" use="optional"/>
		<xs:attribute name="desc" type="xs:string"/>
		<xs:attribute name="pos" type="xs:string"/>
		<xs:attribute name="size" type="xs:string"/>
		<xs:attribute name="sizepolicy" type="sizePolicyTupelType"/>
		<xs:attribute name="font" type="xs:string"/>
		<xs:attribute name="image" type="xs:string"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="standardAttributesGUI">
		<xs:attribute name="define" type="xs:string" use="required"/>
		<xs:attribute name="header" type="xs:string" use="optional"/>
		<xs:attribute name="svd" type="xs:boolean" use="optional"/>
		<xs:attribute name="default" type="xs:string"/>
		<xs:attribute name="label" type="xs:string"/>
		<xs:attribute name="color" type="rgbColorType" use="optional"/>
		<xs:attribute name="pos" type="xs:string"/>
		<xs:attribute name="size" type="xs:string"/>
		<xs:attribute name="sizepolicy" type="sizePolicyTupelType"/>
		<xs:attribute name="font" type="xs:string"/>
		<xs:attribute name="image" type="xs:string"/>
	</xs:attributeGroup>
	<xs:complexType name="guielement-Typ">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="math" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="text" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="image" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="horizontalline" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="edit" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="editbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="checkbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="togglebutton" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="button" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="spinbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="hexspinbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="doublespinbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="combo" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="radio" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="var" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="led" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="registerview" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="table" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="timer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="plot" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="thermo" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="dial" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="log" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="radiobutton" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="branch" minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="container-Typ">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="header" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="tabcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="treecontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="horizontalcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="verticalcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="groupcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="absolutecontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="gridcontainer" minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="anyGUIelement-Typ">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="header" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="tabcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="treecontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="horizontalcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="verticalcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="groupcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="absolutecontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="gridcontainer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="math" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="text" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="image" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="horizontalline" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="edit" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="editbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="checkbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="togglebutton" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="button" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="spinbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="hexspinbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="doublespinbox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="combo" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="radio" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="var" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="led" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="registerview" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="table" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="timer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="plot" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="thermo" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="dial" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="log" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="radiobutton" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="branch" minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="header">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attribute name="file" type="xs:string"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="tabcontainer">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attributeGroup ref="standardAttributesContainer"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="treecontainer">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attributeGroup ref="standardAttributesContainer"/>
					<xs:attribute name="headerlabels" type="xs:string"/>
					<xs:attribute name="columnwidths" type="xs:string" use="optional"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="horizontalcontainer">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attributeGroup ref="standardAttributesContainer"/>
					<!--anyURI besser als string ? -->
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="verticalcontainer">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attributeGroup ref="standardAttributesContainer"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="groupcontainer">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attributeGroup ref="standardAttributesContainer"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="absolutecontainer">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attributeGroup ref="standardAttributesContainer"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="gridcontainer">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anyGUIelement-Typ">
					<xs:attributeGroup ref="standardAttributesContainer"/>
					<xs:attribute name="columns" type="xs:integer" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="branch" type="branch-typ"/>
	<xs:complexType name="branch-typ">
		<xs:complexContent>
			<!--<xs:extension base="guielement-Typ">-->
            <xs:extension base="anyGUIelement-Typ">
				<xs:attribute name="label" type="xs:string"/>
				<xs:attribute name="default" type="xs:string"/>
				<!--TODO: Check if allowed-->
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="item" type="item-Typ"/>
	<xs:complexType name="item-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="hide" type="xs:string" use="optional"/>
		<xs:attribute name="lockon" type="xs:string" use="optional"/>
		<xs:attribute name="override" type="xs:string" use="optional"/>
		<xs:attribute name="setdef" type="xs:string" use="optional" />
		<xs:attribute name="value" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>currently string - false!xs:integer is a derived/subset type of xs:decimal, which representation is definedas decimal has a lexical representation consisting of a finite-length sequence ofdecimal digits (#x30-#x39) separated by a period as a decimal indicator. An optionalleading sign is allowed. If the sign is omitted, "+" is assumed. Leading and trailingzeroes are optional. If the fractional part is zero, the period and following zero(es)can be omitted. For example: -1.23, 12678967.543233, +100000.00, 210.You could remove the 0x and set it to hexBinary, although you lose the number semantic.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="radiobutton" type="radiobutton-Typ"/>
	<xs:complexType name="radiobutton-Typ">
		<xs:complexContent>
			<xs:extension base="anyGUIelement-Typ">
				<xs:sequence>
					<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="label" type="xs:string" use="optional"/>
				<xs:attribute name="uielement" type="xs:string" use="optional"/>
				<xs:attribute name="lockon" type="xs:string" use="optional"/>
				<xs:attribute name="setdef" type="xs:string" use="optional"/>
				<xs:attribute name="value" type="hexOrDecType"/>
				<!--xs:unsignedByte-->
				<xs:attribute name="svd" type="xs:unsignedByte"/>
				<xs:attribute name="header" type="xs:string" use="optional"/>
				<!--TODO: Check if allowed-->
				<xs:attribute name="pos" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="radio" type="radio-Typ"/>
	<xs:complexType name="radio-Typ">
		<xs:complexContent>
			<xs:extension base="guielement-Typ">
				<xs:attributeGroup ref="standardAttributesGUI"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="math" type="math-Typ"/>
	<xs:complexType name="math-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<!--<xs:attributeGroup ref="standardAttributesGUI"/>-->
		<xs:attribute name="define" type="xs:string" use="optional"/>
		<xs:attribute name="header" type="xs:string" use="optional"/>
		<xs:attribute name="svd" type="xs:boolean" use="optional"/>
		<xs:attribute name="default" type="xs:string"/>
		<xs:attribute name="label" type="xs:string"/>
		<xs:attribute name="color" type="rgbColorType" use="optional"/>
		<xs:attribute name="pos" type="xs:string"/>
		<xs:attribute name="size" type="xs:string"/>
		<xs:attribute name="sizepolicy" type="sizePolicyTupelType"/>
		<xs:attribute name="font" type="xs:string"/>
		<xs:attribute name="visible" type="xs:boolean" use="optional"/>
		<xs:attribute name="unit" type="xs:string" use="optional"/>
		<xs:attribute name="format" type="xs:string" use="optional"/>
		<xs:attribute name="formula" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:element name="text" type="text-Typ"/>
	<xs:complexType name="text-Typ">
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="size" type="sizeTupelType" use="optional"/>
		<xs:attribute name="pos" type="xs:string"/>
		<xs:attribute name="font" type="xs:string"/>
	</xs:complexType>
	<xs:element name="image" type="image-Typ"/>
	<xs:complexType name="image-Typ">
		<xs:attribute name="define" type="xs:string" use="optional"/>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="size" type="sizeTupelType" use="optional"/>
		<xs:attribute name="pos" type="xs:string"/>
		<xs:attribute name="file" type="xs:string"/>
	</xs:complexType>
	<xs:element name="horizontalline" type="horizontalline-Typ"/>
	<xs:complexType name="horizontalline-Typ">
		<xs:attribute name="size" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="edit" type="edit-Typ"/>
	<xs:complexType name="edit-Typ">
		<xs:attributeGroup ref="standardAttributesGUI"/>
	</xs:complexType>
	<xs:element name="editbox" type="editbox-Typ"/>
	<xs:complexType name="editbox-Typ">
		<xs:attributeGroup ref="standardAttributesGUI"/>
	</xs:complexType>
	<xs:element name="checkbox" type="checkbox-Typ"/>
	<xs:complexType name="checkbox-Typ">
		<xs:complexContent>
			<xs:extension base="guielement-Typ">
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="horizontalcontainer" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
					<!--Correct ?-->
				</xs:choice>
				<xs:attributeGroup ref="standardAttributesGUI"/>
				<xs:attribute name="uielement" type="xs:string"/>
				<xs:attribute name="lockon" type="xs:string"/>
				<xs:attribute name="role" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="togglebutton" type="togglebutton-Typ"/>
	<xs:complexType name="togglebutton-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="oncolor" type="rgbColorType" use="optional"/>
		<xs:attribute name="offcolor" type="rgbColorType" use="optional"/>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="define" type="xs:string" use="optional"/>
		<xs:attribute name="default" type="xs:string" use="optional"/>
		<xs:attribute name="image" type="xs:string" use="optional"/>
		<xs:attribute name="size" type="sizeTupelType" use="optional"/>
		<xs:attribute name="font" type="xs:string"/>
	</xs:complexType>
	<xs:element name="button" type="button-Typ"/>
	<xs:complexType name="button-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="define" type="xs:string" use="optional"/>
		<xs:attribute name="header" type="xs:string" use="optional"/>
		<xs:attribute name="svd" type="xs:boolean" use="optional"/>
		<xs:attribute name="default" type="xs:string"/>
		<xs:attribute name="label" type="xs:string"/>
		<xs:attribute name="color" type="rgbColorType" use="optional"/>
		<xs:attribute name="desc" type="xs:string"/>
		<xs:attribute name="pos" type="xs:string"/>
		<xs:attribute name="size" type="xs:string"/>
		<xs:attribute name="sizepolicy" type="sizePolicyTupelType"/>
		<xs:attribute name="font" type="xs:string"/>
		<xs:attribute name="image" type="xs:string"/>
		<xs:attribute name="icon" type="xs:string" use="optional"/>
		<xs:attribute name="setdef" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="spinbox" type="spinbox-Typ"/>
	<xs:complexType name="spinbox-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="standardAttributesGUI"/>
		<xs:attribute name="prefix" type="xs:string" use="optional"/>
		<xs:attribute name="suffix" type="xs:string" use="optional"/>
		<xs:attribute name="step" type="xs:decimal" use="optional"/>
		<xs:attribute name="range" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="hexspinbox" type="hexspinbox-Typ"/>
	<xs:complexType name="hexspinbox-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="standardAttributesGUI"/>
		<xs:attribute name="prefix" type="xs:string" use="optional"/>
		<xs:attribute name="suffix" type="xs:string" use="optional"/>
		<xs:attribute name="step" type="xs:decimal" use="optional"/>
		<xs:attribute name="range" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="doublespinbox" type="doublespinbox-Typ"/>
	<xs:complexType name="doublespinbox-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="standardAttributesGUI"/>
		<xs:attribute name="prefix" type="xs:string" use="optional"/>
		<xs:attribute name="suffix" type="xs:string" use="optional"/>
		<xs:attribute name="step" type="xs:decimal" use="optional"/>
		<xs:attribute name="range" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="combo" type="combo-Typ"/>
	<xs:complexType name="combo-Typ">
		<xs:sequence>
			<xs:element ref="item" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="standardAttributesGUI"/>
		<xs:attribute name="setdef" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="var" type="var-Typ"/>
	<xs:complexType name="var-Typ">
		<xs:attribute name="define" type="xs:string" use="required"/>
		<xs:attribute name="default" type="xs:string" use="optional"/>
		<xs:attribute name="svd" type="xs:boolean" use="optional"/>
	</xs:complexType>
	<xs:element name="include" type="xs:string"/>
	<xs:element name="led" type="led-Typ"/>
	<xs:complexType name="led-Typ">
		<xs:attribute name="data" type="xs:string" use="required"/>
		<xs:attribute name="bitmask" type="xs:string" use="optional"/>
		<xs:attribute name="oncolor" type="xs:string" use="optional"/>
		<xs:attribute name="offcolor" type="xs:string" use="optional"/>
		<xs:attribute name="size" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="registerview" type="registerview-Typ"/>
	<xs:complexType name="registerview-Typ">
		<xs:attribute name="define" type="xs:string" use="required"/>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="bits" type="xs:decimal" use="optional"/>
		<xs:attribute name="numrows" type="xs:decimal" use="optional"/>
		<xs:attribute name="svd" type="xs:boolean" use="optional"/>
		<xs:attribute name="sizepolicy" type="sizePolicyTupelType"/>
		<xs:attribute name="size" type="sizeTupelType" use="optional"/>
		<xs:attribute name="pos" type="xs:string"/>
	</xs:complexType>
	<xs:element name="table" type="table-Typ"/>
	<xs:complexType name="table-Typ">
		<xs:sequence>
			<xs:element ref="column" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="define" type="xs:string" use="required"/>
		<xs:attribute name="svd" type="xs:boolean" use="optional"/>
		<xs:attribute name="numrows" type="xs:decimal" use="optional"/>
		<xs:attribute name="sendformat" type="xs:string" use="optional"/>
		<xs:attribute name="recformat" type="xs:string" use="optional"/>
		<xs:attribute name="tooltiprecformat" type="xs:string" use="optional"/>
		<xs:attribute name="sizepolicy" type="sizePolicyTupelType"/>
		<xs:attribute name="size" type="sizeTupelType" use="optional"/>
		<xs:attribute name="pos" type="xs:string"/>
	</xs:complexType>
	<xs:element name="timer" type="timer-Typ"/>
	<xs:complexType name="timer-Typ">
		<xs:sequence>
			<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="visible" type="xs:boolean" use="optional"/>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="define" type="xs:string" use="optional"/>
		<xs:attribute name="svd" type="xs:boolean" use="optional"/>
		<xs:attribute name="size" type="sizeTupelType" use="optional"/>
		<xs:attribute name="interval" type="xs:unsignedInt" use="optional"/>
		<xs:attribute name="singleShot" type="xs:unsignedByte" use="optional"/>
		<xs:attribute name="run" type="xs:unsignedByte" use="optional"/>
	</xs:complexType>
	<xs:element name="plot" type="plot-Typ"/>
	<xs:complexType name="plot-Typ">
		<xs:sequence>
			<xs:element ref="curve" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="size" type="sizeTupelType" use="optional"/>
		<xs:attribute name="minX" type="xs:integer" use="optional"/>
		<xs:attribute name="maxX" type="xs:integer" use="optional"/>
		<xs:attribute name="minY" type="xs:integer" use="optional"/>
		<xs:attribute name="maxY" type="xs:integer" use="optional"/>
		<xs:attribute name="autoScaleMinY" type="xs:integer" use="optional"/>
		<xs:attribute name="autoScaleMaxY" type="xs:integer" use="optional"/>
		<xs:attribute name="grid" type="xs:unsignedByte" use="optional"/>
		<xs:attribute name="xLabel" type="xs:string" use="optional"/>
		<xs:attribute name="yLabel" type="xs:string" use="optional"/>
		<xs:attribute name="oszi" type="xs:boolean" use="optional"/>
	</xs:complexType>
	<xs:element name="thermo" type="thermo-Typ"/>
	<xs:complexType name="thermo-Typ">
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="size" type="xs:string" use="optional"/>
		<xs:attribute name="min" type="xs:integer" use="optional"/>
		<xs:attribute name="max" type="xs:integer" use="optional"/>
		<xs:attribute name="orientation" type="xs:unsignedByte" use="optional"/>
		<xs:attribute name="data" type="xs:string" use="required"/>
		<xs:attribute name="normalcolor" type="rgbColorType" use="optional"/>
		<xs:attribute name="alarmcolor" type="rgbColorType" use="optional"/>
		<xs:attribute name="alarmlevel" type="xs:integer" use="optional"/>
	</xs:complexType>
	<xs:element name="dial" type="dial-Typ"/>
	<xs:complexType name="dial-Typ">
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="size" type="xs:string" use="optional"/>
		<xs:attribute name="min" type="xs:unsignedByte" use="optional"/>
		<xs:attribute name="max" type="xs:unsignedShort" use="optional"/>
		<xs:attribute name="data" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:element name="log" type="log-Typ"/>
	<xs:complexType name="log-Typ">
		<xs:sequence>
			<xs:element ref="logitem" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="label" type="xs:string" use="required"/>
		<xs:attribute name="filename" type="xs:string" use="required"/>
		<xs:attribute name="console" type="xs:boolean" use="required"/>
		<xs:attribute name="type" type="xs:string" use="required"/>
		<xs:attribute name="append" type="xs:boolean" use="required"/>
		<xs:attribute name="delimiter" type="Character" use="required"/>
		<xs:attribute name="timestamp" type="xs:unsignedByte" use="required"/>
	</xs:complexType>
	<xs:element name="action">
		<xs:complexType>
			<xs:attribute name="event" type="xs:string" use="required"/>
			<xs:attribute name="cmd" type="xs:string" use="required"/>
			<xs:attribute name="data" type="xs:string" use="optional"/>
			<xs:attribute name="recdata" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="column">
		<xs:complexType>
			<xs:attribute name="label" type="xs:string" use="optional"/>
			<xs:attribute name="tooltip" type="xs:string" use="optional"/>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="columnwidth" type="xs:string" use="optional"/>
			<xs:attribute name="format" type="xs:string" use="optional"/>
			<xs:attribute name="default" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="curve">
		<xs:complexType>
			<xs:attribute name="label" type="xs:string" use="optional"/>
			<xs:attribute name="color" type="xs:string" use="optional"/>
			<xs:attribute name="data" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="logitem">
		<xs:complexType>
			<xs:attribute name="label" type="xs:string" use="required"/>
			<xs:attribute name="data" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
